doctype html
html(
	lang=(currentLngCode || 'zh-CN')
	class=(fixedSizeDocument ? 'fixed-size-document' : undefined)
)
	- metadata = metadata || {}

	block entrypointVar

	block vars

	head
		include ./_metadata.pug

		//- Stylesheet
		link(rel='stylesheet', href=buildCssPath(getCssThemeModifier(userSettings, brandVariation)), id="main-stylesheet")
		block css
			each file in entrypointStyles(entrypoint)
				link(rel='stylesheet', href=file)

		block _headLinks

		if settings.i18n.subdomainLang
			each subdomainDetails in settings.i18n.subdomainLang
				if !subdomainDetails.hide
					link(rel="alternate", href=subdomainDetails.url+currentUrl, hreflang=subdomainDetails.lngCode)

		//- Scripts
		include _google_analytics

		block meta
			meta(name="ol-csrfToken" content=csrfToken)
			//- Configure dynamically loaded assets (via webpack) to be downloaded from CDN
			//- See: https://webpack.js.org/guides/public-path/#on-the-fly
			meta(name="ol-baseAssetPath" content=buildBaseAssetPath())

			meta(name="ol-usersEmail" content=getUserEmail())
			meta(name="ol-sharelatex" data-type="json" content={
				siteUrl: settings.siteUrl,
				wsUrl,
			})
			meta(name="ol-ab" data-type="json" content={})
			meta(name="ol-user_id" content=getLoggedInUserId())
			//- Internationalisation settings
			meta(name="ol-i18n" data-type="json" content={
				currentLangCode: currentLngCode
			})
			//- Expose some settings globally to the frontend
			meta(name="ol-ExposedSettings" data-type="json" content=ExposedSettings)
			meta(name="ol-splitTestVariants" data-type="json" content=splitTestVariants || {})
			meta(name="ol-splitTestInfo" data-type="json" content=splitTestInfo || {})

			if (typeof(settings.algolia) != "undefined")
				meta(name="ol-algolia" data-type="json" content={
					appId: settings.algolia.app_id,
					apiKey: settings.algolia.read_only_api_key,
					indexes: settings.algolia.indexes
				})

			if (typeof(settings.templates) != "undefined")
				meta(name="ol-sharelatex.templates" data-type="json" content={
					user_id : settings.templates.user_id,
					cdnDomain : settings.templates.cdnDomain,
					indexName : settings.templates.indexName
				})

			meta(name="ol-isManagedAccount" data-type="boolean" content=isManagedAccount)
			each restriction in userRestrictions || []
				meta(name='ol-cannot-' + restriction data-type="boolean" content=true)

		block head-scripts

	body(ng-csp=(cspEnabled ? "no-unsafe-eval" : false) class=(showThinFooter ? 'thin-footer' : undefined))
		if(settings.recaptcha && settings.recaptcha.siteKeyV3)
			script(type="text/javascript", nonce=scriptNonce, src="https://www.recaptcha.net/recaptcha/api.js?render="+settings.recaptcha.siteKeyV3)

		if (typeof(suppressSkipToContent) == "undefined")
			a(class="skip-to-content" href="#main-content") #{translate('skip_to_content')}

		block body

	block foot-scripts
		each file in entrypointScripts(entrypoint)
			script(type="text/javascript", nonce=scriptNonce, src=file)
	
	script(type="text/javascript", nonce=scriptNonce).
		//- Look for bundle
		var cdnBlocked = typeof Frontend === 'undefined'
		//- Prevent loops
		var noCdnAlreadyInUrl = window.location.href.indexOf("nocdn=true") != -1
		if (cdnBlocked && !noCdnAlreadyInUrl && navigator.userAgent.indexOf("Googlebot") == -1) {
			//- Set query param, server will not set CDN url
			window.location.search += "&nocdn=true";
		}
